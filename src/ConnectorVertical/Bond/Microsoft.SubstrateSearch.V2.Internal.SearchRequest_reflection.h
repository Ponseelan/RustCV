
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.12.1.0
//   Input filename:  D:\Rust\ConnectorVertical\RustCV\src\ConnectorVertical\Bond\Microsoft.SubstrateSearch.V2.Internal.SearchRequest.bond
//   Output filename: Microsoft.SubstrateSearch.V2.Internal.SearchRequest_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "Microsoft.SubstrateSearch.V2.Internal.SearchRequest_types.h"
#include <bond/core/reflection.h>

namespace Microsoft
{
namespace SubstrateSearch
{
namespace V2
{
namespace Internal
{
    //
    // SearchRequest
    //
    struct SearchRequest::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_UserCacheKey_metadata;

        public: struct var
        {
            // UserCacheKey
            typedef struct UserCacheKey_type : ::bond::reflection::FieldTemplate<
                30,
                ::bond::reflection::optional_field_modifier,
                SearchRequest,
                ::bond::maybe<std::string>,
                &SearchRequest::UserCacheKey,
                &s_UserCacheKey_metadata
            > {} UserCacheKey;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::UserCacheKey>::type fields1;

        public: typedef fields1::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("SearchRequest", "Microsoft.SubstrateSearch.V2.Internal.SearchRequest",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Internal
} // namespace V2
} // namespace SubstrateSearch
} // namespace Microsoft
